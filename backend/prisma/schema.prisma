// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String    @id @default(uuid()) 
  firstName String
  lastName  String
  email     String    @unique
  accounts  account[] 
}

model account {
  id           String @id @default(cuid())
  userId       String
  accessToken        String @unique
  refreshToken        String @unique
  emailAddress String
  name         String
  historyId    String?
  threads        Thread[]
 

  User         User   @relation(fields: [userId], references: [id])
}

model Thread {
    id              String   @id @default(cuid())
    subject         String
    lastMessageDate DateTime
    participantIds  String[]
    accountId       String
    account         account  @relation(fields: [accountId], references: [id])

    done Boolean @default(false)

    inboxStatus Boolean @default(true)
    draftStatus Boolean @default(false)
    sentStatus  Boolean @default(false)

    emails Email[]

    @@index([accountId])
    @@index([done])
    @@index([inboxStatus])
    @@index([draftStatus])
    @@index([sentStatus])
    @@index([lastMessageDate])
}


model Email {
    id                   String                @id @default(cuid())
    threadId             String
    thread               Thread                @relation(fields: [threadId], references: [id])
    createdTime          DateTime
    lastModifiedTime     DateTime
    sentAt               DateTime
    receivedAt           DateTime
    internetMessageId    String
    subject              String
    sysLabels            String[]
    keywords             String[]
    sysClassifications   String[]
    sensitivity          Sensitivity           @default(normal)
    meetingMessageMethod MeetingMessageMethod?
    from                 String         
   
    to                   String[]           
    cc                    String[]

    bcc                  String[]
    replyTo             String[]
    hasAttachments       Boolean
    body                 String?
    bodySnippet          String?
    attachments          EmailAttachment[]
    inReplyTo            String?
    references           String?
    threadIndex          String?
    internetHeaders      Json[]
    nativeProperties     Json?
    folderId             String?
    omitted              String[]

    emailLabel EmailLabel @default(inbox)

    @@index([threadId])
    @@index([emailLabel])
    @@index([sentAt])
}
  
enum EmailLabel {
    inbox
    sent
    draft
}




model EmailAttachment {
    id              String  @id @default(cuid())
    name            String
    mimeType        String
    size            Int
    inline          Boolean
    contentId       String?
    content         String?
    contentLocation String?
    Email           Email   @relation(fields: [emailId], references: [id])
    emailId         String
}


enum Sensitivity {
    normal
    private
    personal
    confidential
}

enum MeetingMessageMethod {
    request
    reply
    cancel
    counter
    other
}